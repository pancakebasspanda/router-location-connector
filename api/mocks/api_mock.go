// Code generated by MockGen. DO NOT EDIT.
// Source: api/api.go

// Package mock_api is a generated GoMock package.
package mock_api

import (
	context "context"
	reflect "reflect"
	api "router-location-connecter/api"

	gomock "github.com/golang/mock/gomock"
)

// MockAPI is a mock of API interface.
type MockAPI struct {
	ctrl     *gomock.Controller
	recorder *MockAPIMockRecorder
}

// MockAPIMockRecorder is the mock recorder for MockAPI.
type MockAPIMockRecorder struct {
	mock *MockAPI
}

// NewMockAPI creates a new mock instance.
func NewMockAPI(ctrl *gomock.Controller) *MockAPI {
	mock := &MockAPI{ctrl: ctrl}
	mock.recorder = &MockAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPI) EXPECT() *MockAPIMockRecorder {
	return m.recorder
}

// GetRouterLocationData mocks base method.
func (m *MockAPI) GetRouterLocationData(ctx context.Context) (*api.RouterLocationData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRouterLocationData", ctx)
	ret0, _ := ret[0].(*api.RouterLocationData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRouterLocationData indicates an expected call of GetRouterLocationData.
func (mr *MockAPIMockRecorder) GetRouterLocationData(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRouterLocationData", reflect.TypeOf((*MockAPI)(nil).GetRouterLocationData), ctx)
}
